@using Volue_case.Services
@using Volue_case.Services.CommonHelpers
@model IEnumerable<Volue_case.Models.Entities.Series>
@{
  var i = 1;
}
<div class="accordion" id="series">
  @foreach (var series in Model)
  {
    var show = i == -1 ? "show" : "";
    var j = 1;

    <div class="accordion-item">
      <h2 class="accordion-header" id="heading-@i">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@i" aria-expanded="true" aria-controls="collapse-@i">
          <span>Series #@i</span>
          <span style="border: 1px solid rgba(132,132,132,0.93); border-radius: 0.2rem" class="text-muted mx-4 p-2">Started: @series.StartInterval.ToDateFormat() - @series.StartInterval.ToTimeFormat()</span> -
          <span style="border: 1px solid rgba(132,132,132,0.93); border-radius: 0.2rem" class="text-muted mx-4 p-2">Positions: @series.Positions.Count.ToNumberFormat()</span> -
          <span style="border: 1px solid rgba(132,132,132,0.93); border-radius: 0.2rem" class="text-muted mx-4 p-2">Quantities: @series.Positions.Sum(x => x.Quantity).ToNumberFormat()</span>

        </button>
      </h2>
      <div id="collapse-@i" class="accordion-collapse collapse @show" aria-labelledby="heading-@i" data-bs-parent="#series">
        <div class="accordion-body">
          
          <table class="table table-success text-center">
            <tr>
              <th>From</th>
              <th>To</th>
              <th>Direction</th>
              <th>Price | Area</th>
              <th>Resolution</th>
              <th>Status</th>
              <th>Asset id</th>
            </tr>
            
            <tr>
              <td>@series.StartInterval.ToDateFormat() - @series.StartInterval.ToTimeFormat()</td>
              <td>@series.EndInterval.ToDateFormat() - @series.EndInterval.ToTimeFormat()</td>
              <td>@series.Direction</td>
              <td>@series.Price.ToNumberFormat() (@series.Currency) | @series.PriceArea</td>
              <td>@series.Resolution</td>
              <td>@series.Status</td>
              <td>@series.AssetId</td>
              
            </tr>
          </table>
          
          @* <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. *@
        </div>
        
        @* Positions list*@
        <div class="accordion w-75 m-auto p-5" id="positions">
          @foreach (var position in series.Positions)
          {
            <div class="accordion-item">
              <h2 class="accordion-header" id="heading-pos-@j">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-pos-@j" aria-expanded="false" aria-controls="collapse-pos-@j">
                  Position #@j
                </button>
              </h2>
              <div id="collapse-pos-@j" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#positions">
                <div class="accordion-body">
                  <ul>
                    <li>Quantity: @position.Quantity</li>
                  </ul>
                  
                </div>
              </div>
            </div>

            j++;
          }
        </div>
        
      </div>
    </div>

    i++;

  }
  
</div>

